<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Steven&#39;s blog</title>
  <subtitle>学无止境 记录点滴</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://stevenshi.me/"/>
  <updated>2017-05-14T23:56:22.522Z</updated>
  <id>http://stevenshi.me/</id>
  
  <author>
    <name>Steven Shi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo问题汇总</title>
    <link href="http://stevenshi.me/2017/05/13/hexo-error/"/>
    <id>http://stevenshi.me/2017/05/13/hexo-error/</id>
    <published>2017-05-13T09:42:11.000Z</published>
    <updated>2017-05-14T23:56:22.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Unable-to-call-the-return-value-of-posts-“first”-“updated”-“toISOString”-which-is-undefined-or-falsey"><a href="#Unable-to-call-the-return-value-of-posts-“first”-“updated”-“toISOString”-which-is-undefined-or-falsey" class="headerlink" title="Unable to call the return value of (posts[“first”])[“updated”][“toISOString”], which is undefined or falsey"></a>Unable to call the return value of (posts[“first”])[“updated”][“toISOString”], which is undefined or falsey</h1><p> 运行<em>hexo g</em>生成静态文件时提示错误：<br>　　<figure class="highlight vbnet"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$ hexo g</div><div class="line">INFO  Start processing</div><div class="line">FATAL Something<span class="comment">'s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</span></div><div class="line">Template render <span class="keyword">error</span>: (unknown path) [Line <span class="number">7</span>, Column <span class="number">23</span>]</div><div class="line"><span class="keyword">Error</span>: Unable <span class="keyword">to</span> <span class="keyword">call</span> `the <span class="keyword">return</span> value <span class="keyword">of</span> (posts[<span class="string">"first"</span>])[<span class="string">"updated"</span>][<span class="string">"toISOString"</span>]`, which <span class="keyword">is</span> undefined <span class="keyword">or</span> falsey</div></pre></td></tr></table></figure></p>
 <a id="more"></a>
<p> 当移除掉插件hexo-generator-feed和hexo-generator-sitemap后错误消失，怀疑该插件与hexo兼容性不好<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$npm</span> uninstall hexo-generator-feed</span></div><div class="line"><span class="meta"><span class="meta-keyword">$npm</span> uninstall hexo-generator-sitemap</span></div></pre></td></tr></table></figure></p>
<h1 id="WARN-No-layout-index-html"><a href="#WARN-No-layout-index-html" class="headerlink" title="WARN No layout: index.html?"></a>WARN No layout: index.html?</h1><p> 查看主题目录是否为空，如果为空下载主题</p>
<h1 id="fatal-AggregateException-encountered"><a href="#fatal-AggregateException-encountered" class="headerlink" title="fatal: AggregateException encountered"></a>fatal: AggregateException encountered</h1><p> 当推送至远程分支时提示错误:<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$git</span> push origin hexo</span></div><div class="line">fatal: AggregateException encountered</div><div class="line">  •¢ÉúÒ»¸ö»ò¶à¸ö´íÎó¡£</div><div class="line">Username <span class="keyword">for</span> <span class="string">'https://github.com'</span>:</div></pre></td></tr></table></figure></p>
<p> 多数是网络问题，重来一次即可。</p>
<h2 id="Cannot-GET"><a href="#Cannot-GET" class="headerlink" title="Cannot GET /"></a>Cannot GET /</h2><p> 当启动服务器后，浏览器输入<em><a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a></em>，却提示错误：<em>Cannot GET</em><br> 一般是配置文件错误，当在其他电脑从远程clone下来代码仓后，安装必要的工具使用 <em>hexo clean</em> 以及 <em>hexo g</em> 后产生的 <em>public</em> 文件与本地电脑原有源码仓生成的 <em>public</em> 不一样，查看里面并没有生成以日期命名的文章文件，怀疑是配置文件出了问题，对比两个配置文件都一样，最后发现 <em>node_modules</em> 文件夹问题，就是hexo的配置和安装问题，其他文件都推送到远程仓库，唯独没有推送这个文件夹，它保存有hexo的一些可执行文件。按照hexo安装教程在clone下来的代码仓重新安装一遍hexo，最后还是不行。使用<a href="http://winmerge.org/" target="_blank" rel="external">WinMerge</a>比较原电脑中和现在电脑中的两个node_modules文件的不同，发现hexo的很多二进制文件都不同。无语-<br> 当使用 <em>hexo init</em> 后，再把远程仓库的配置文件覆盖到本地电脑后，可以正常生成静态网页。肯定是 <em>hexo</em> 安装不完整缺少某些依赖项。<br> 所以，当在一台新电脑部署 <em>hexo</em> 的正确做法是安装好 <em>hexo</em> 之后需要 <em>hexo init</em> 一下，这样会安装依赖项，得到完整的 <em>node_modules</em>文件夹：<br>　　<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$npm</span> install hexo --<span class="keyword">save</span></div><div class="line"><span class="variable">$npm</span> install hexo-server  --<span class="keyword">save</span></div><div class="line"><span class="variable">$npm</span> install hexo-generator-<span class="keyword">search</span> --<span class="keyword">save</span></div><div class="line"><span class="variable">$npm</span> install hexo-deployer-git --<span class="keyword">save</span></div><div class="line"><span class="variable">$hexo</span> init <span class="comment">//</span></div></pre></td></tr></table></figure></p>
<p> 初始化之后，保留node_modules文件夹，其它删除，之后获取远程仓库最新更新：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$git</span> remote add origin https:<span class="regexp">//gi</span>thub.com<span class="regexp">/yourusername/y</span>ourusername.github.io.git</div><div class="line"><span class="variable">$git</span> pull origin hexo</div></pre></td></tr></table></figure></p>
<h1 id="bash-dev-tty-No-such-device-or-address-error-failed-to-execute-prompt-script-exit-code-1"><a href="#bash-dev-tty-No-such-device-or-address-error-failed-to-execute-prompt-script-exit-code-1" class="headerlink" title="bash: /dev/tty: No such device or address.error: failed to execute prompt script (exit code 1)"></a>bash: /dev/tty: No such device or address.error: failed to execute prompt script (exit code 1)</h1><p> 当部署自己的博客文件时：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$hexo</span> d</span></div></pre></td></tr></table></figure></p>
<p> 出现以下错误：<br>　　<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">bash: /dev/tty: No such device or address</div><div class="line"><span class="keyword">error: </span>failed to execute prompt script (exit code 1)</div><div class="line">fatal: could not read Username for 'https://github.com': Invalid argument</div><div class="line">FATAL Something's wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html</div><div class="line"><span class="keyword">Error: </span>bash: /dev/tty: No such device or address</div><div class="line"><span class="keyword">error: </span>failed to execute prompt script (exit code 1)</div><div class="line">fatal: could not read Username for 'https://github.com': Invalid argument.</div></pre></td></tr></table></figure></p>
<p> 出现该现象是 <em>windows</em> 环境下的<em>git bash shell</em>配置问题，当改用 <em>github for windows</em> 下的<em>git bash shell</em> 再次部署时问题解决。由于国内的网络问题，官网下载很难安装成功，这里附上一个CSDN上的大神的离线安装包地址<a href="http://download.csdn.net/user/devsplash" target="_blank" rel="external">GithubforWindows</a>。</p>
<h1 id="Permission-denied-publickey"><a href="#Permission-denied-publickey" class="headerlink" title="Permission denied (publickey)."></a>Permission denied (publickey).</h1><p> 当部署博客文件时提示错误：<br>　　<figure class="highlight ada"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$hexo d</div><div class="line">The authenticity <span class="keyword">of</span> host <span class="symbol">'github.com</span> (<span class="number">192.30</span>.<span class="number">255.112</span>)' can<span class="symbol">'t</span> be established.</div><div class="line">Permission denied (publickey).</div></pre></td></tr></table></figure></p>
<p> 本机没有配置SSH Key：<br> 　<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ssh-keygen -t rsa -C <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure></p>
<p> 将生成的SSH Key拷贝下来，粘贴到自己的github网站的new ssh key中即可。或者使用原来电脑的SSH Key。完成后查看配置是否成功：<br> 　<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ssh -T git<span class="symbol">@github</span>.com</div></pre></td></tr></table></figure></p>
<h1 id="Changes-not-staged-for-commit-Untracked-files"><a href="#Changes-not-staged-for-commit-Untracked-files" class="headerlink" title="Changes not staged for commit: Untracked files:"></a>Changes not staged for commit: Untracked files:</h1><p>当每次git commit提交更改时，总是提示以下错误：<br>　　<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">$git <span class="keyword">commit</span> -m <span class="string">""</span></div><div class="line"><span class="keyword">On</span> branch hexo</div><div class="line">Changes <span class="keyword">not</span> staged <span class="keyword">for</span> <span class="keyword">commit</span>:</div><div class="line">      </div><div class="line">Untracked files:</div></pre></td></tr></table></figure></p>
<p> 通过输入git status查看提示：<br>　　<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">$ git status</div><div class="line">On branch hexo</div><div class="line">Changes not staged for <span class="keyword">commit</span>:</div><div class="line"> (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">update</span> what will be committed)</div><div class="line"> (<span class="keyword">use</span> <span class="string">"git checkout -- &lt;file&gt;..."</span> <span class="keyword">to</span> discard changes <span class="keyword">in</span> working <span class="keyword">directory</span>)</div><div class="line"></div><div class="line">       </div><div class="line">Untracked files:</div><div class="line"> (<span class="keyword">use</span> <span class="string">"git add &lt;file&gt;..."</span> <span class="keyword">to</span> <span class="keyword">include</span> <span class="keyword">in</span> what will be committed)</div><div class="line"></div><div class="line">       </div><div class="line"><span class="keyword">no</span> changes added <span class="keyword">to</span> <span class="keyword">commit</span> (<span class="keyword">use</span> <span class="string">"git add"</span> <span class="keyword">and</span>/<span class="keyword">or</span> <span class="string">"git commit -a"</span>)</div></pre></td></tr></table></figure></p>
<p> <em>Changes not staged for commit</em> 说明 <em>git</em> 已经跟踪到这些文件的修改，但还没有放到暂存区，需要使用 <em>git add</em> 命令提交更新到暂存区。之后再通过 <em>git status</em> 查看状态：<br>　　<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$git status</div><div class="line"><span class="keyword">On</span> branch hexo</div><div class="line">Changes <span class="keyword">to</span> be committed:</div><div class="line"> (use <span class="string">"git reset HEAD &lt;file&gt;..."</span> <span class="keyword">to</span> unstage)</div></pre></td></tr></table></figure></p>
<p> 状态已经变成了Changes to be committed。提示未被跟踪的文件Untracked files说明是新建立的文件，在git之前的提交中没有这些文件，git不会自动将它们纳入跟踪范围，必须手动添加这些文件。使用 <em>git add</em> 命令跟踪新文件：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$git</span> add <span class="string">"file"</span> <span class="regexp">//</span>添加未被跟踪的文件</div></pre></td></tr></table></figure></p>
<p> 如果还有错误，直接清除缓存:<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">git rm -r --cached .</span></div><div class="line"><span class="meta">$</span><span class="bash">git add --all //跟踪所有文件</span></div><div class="line"><span class="meta">$</span><span class="bash">git commit -m <span class="string">"your commit"</span> //提交更新</span></div><div class="line"><span class="meta">$</span><span class="bash">git push origin <span class="string">"yourbranch"</span> //推送到远程分支yourbranch</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Unable-to-call-the-return-value-of-posts-“first”-“updated”-“toISOString”-which-is-undefined-or-falsey&quot;&gt;&lt;a href=&quot;#Unable-to-call-the-return-value-of-posts-“first”-“updated”-“toISOString”-which-is-undefined-or-falsey&quot; class=&quot;headerlink&quot; title=&quot;Unable to call the return value of (posts[“first”])[“updated”][“toISOString”], which is undefined or falsey&quot;&gt;&lt;/a&gt;Unable to call the return value of (posts[“first”])[“updated”][“toISOString”], which is undefined or falsey&lt;/h1&gt;&lt;p&gt; 运行&lt;em&gt;hexo g&lt;/em&gt;生成静态文件时提示错误：&lt;br&gt;　　&lt;figure class=&quot;highlight vbnet&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo g&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;INFO  Start processing&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FATAL Something&lt;span class=&quot;comment&quot;&gt;&#39;s wrong. Maybe you can find the solution here: http://hexo.io/docs/troubleshooting.html&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Template render &lt;span class=&quot;keyword&quot;&gt;error&lt;/span&gt;: (unknown path) [Line &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;, Column &lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;Error&lt;/span&gt;: Unable &lt;span class=&quot;keyword&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;call&lt;/span&gt; `the &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; value &lt;span class=&quot;keyword&quot;&gt;of&lt;/span&gt; (posts[&lt;span class=&quot;string&quot;&gt;&quot;first&quot;&lt;/span&gt;])[&lt;span class=&quot;string&quot;&gt;&quot;updated&quot;&lt;/span&gt;][&lt;span class=&quot;string&quot;&gt;&quot;toISOString&quot;&lt;/span&gt;]`, which &lt;span class=&quot;keyword&quot;&gt;is&lt;/span&gt; undefined &lt;span class=&quot;keyword&quot;&gt;or&lt;/span&gt; falsey&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://stevenshi.me/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://stevenshi.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>浮点数与16进制的相互转换</title>
    <link href="http://stevenshi.me/2017/05/11/float-to-byte/"/>
    <id>http://stevenshi.me/2017/05/11/float-to-byte/</id>
    <published>2017-05-11T05:35:03.000Z</published>
    <updated>2017-05-11T06:23:22.609Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p> 在嵌入式中经常会遇到浮点数的传输问题，一般将浮点数转换成4字节的16进制传输，这里的浮点数仅限于单精度浮点。大多数人的做法都是使用指针实现强制类型转换，其实浮点数在CPU里就是以4字节存储，既然在同一块内存，那我们能不能使用联合体呢？答案是肯定的。除了强制类型转换，这里介绍使用联合体实现浮点和16进制的转换，简单易用，你绝对会爱上这种方法。<br><a id="more"></a></p>
<h1 id="强制转换法"><a href="#强制转换法" class="headerlink" title="强制转换法"></a>强制转换法</h1><p> 浮点转换成4字节16进制:<br>　　<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">float2bytes</span><span class="params">(<span class="keyword">float</span> p,<span class="keyword">unsigned</span> <span class="keyword">char</span> *bytes)</span></span></div><div class="line">&#123;</div><div class="line"> <span class="keyword">unsigned</span> <span class="keyword">char</span> *pchar = (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)&amp;p;</div><div class="line"> <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i &lt; <span class="keyword">sizeof</span>(<span class="keyword">float</span>);i++)</div><div class="line"> &#123;</div><div class="line">   *bytes = *pchar;</div><div class="line">   pchar++;</div><div class="line">   bytes++;</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p> 16进制4字节转换成浮点：<br>　　<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">float</span> <span class="title">bytes2float</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span> *bytes)</span></span></div><div class="line">&#123;</div><div class="line"> <span class="keyword">return</span> *((<span class="keyword">float</span>*)bytes);<span class="comment">//强制转换</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h1 id="联合体法"><a href="#联合体法" class="headerlink" title="联合体法"></a>联合体法</h1><p> 话不多说，直接上代码：<br>　<figure class="highlight crystal"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">typedef <span class="class"><span class="keyword">union</span>&#123;</span></div><div class="line"></div><div class="line">unsigned char cvalue[<span class="number">4</span>];</div><div class="line">float fvalue;</div><div class="line"></div><div class="line">&#125;float_union;</div></pre></td></tr></table></figure></p>
<p> 定义联合体变量:<br>　<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">float_union trans_data<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p> 此时如果给变量trans_data赋值一个浮点数:<br> 　<figure class="highlight abnf"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">trans_data.fvalue = <span class="number">10.05</span><span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p> 那么直接调用cvalue即可获取浮点数10.05的4字节16进制数据：<br>　 <figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">4</span>;i++)</div><div class="line"><span class="keyword">printf</span>(<span class="string">" 0x%02x"</span>,trans_data.cvalue[i]);</div></pre></td></tr></table></figure></p>
<p> 是不是非常简单实用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt; 在嵌入式中经常会遇到浮点数的传输问题，一般将浮点数转换成4字节的16进制传输，这里的浮点数仅限于单精度浮点。大多数人的做法都是使用指针实现强制类型转换，其实浮点数在CPU里就是以4字节存储，既然在同一块内存，那我们能不能使用联合体呢？答案是肯定的。除了强制类型转换，这里介绍使用联合体实现浮点和16进制的转换，简单易用，你绝对会爱上这种方法。&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://stevenshi.me/categories/linux/"/>
    
    
      <category term="linux" scheme="http://stevenshi.me/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>hexo进阶</title>
    <link href="http://stevenshi.me/2017/05/09/hexo-advance/"/>
    <id>http://stevenshi.me/2017/05/09/hexo-advance/</id>
    <published>2017-05-09T06:32:38.000Z</published>
    <updated>2017-05-15T01:22:34.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加页面"><a href="#添加页面" class="headerlink" title="添加页面"></a>添加页面</h1><p>页面指的是分类页<em>categories</em>、标签页<em>tags</em>、关于页<em>about</em>等。使用以下命令生成以上页面参考<a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">nexT</a>:<br>　　<figure class="highlight cos"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">$hexo</span> <span class="keyword">new</span> page categories</div><div class="line"><span class="built_in">$hexo</span> <span class="keyword">new</span> page tags</div><div class="line"><span class="built_in">$hexo</span> <span class="keyword">new</span> page about</div></pre></td></tr></table></figure></p>
<p>在 <em>hexo</em> 配置文件 <em>_config.yml</em> 文件中设置 <em>post_asset_folder</em> 为true,当新建页面后会自动生成一个同名文件夹，用于存储所需的资源图片等。生成以上页面后在主题配置文件中 <em>themes/nexT/_config.yml</em> 打开相关配置项:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">menu:</span></div><div class="line"><span class="symbol">  home:</span> /</div><div class="line"><span class="symbol">  categories:</span> /categories</div><div class="line"><span class="symbol">  about:</span> /about</div><div class="line"><span class="symbol">  archives:</span> /archives</div><div class="line"><span class="symbol">  tags:</span> /tags</div><div class="line">  <span class="meta">#sitemap: /sitemap.xml</span></div><div class="line">  <span class="meta">#commonweal: /404.html</span></div></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>设置自己的标签页面位于<em>hexo/source/tags</em>:<br>  <figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">title: 标签</div><div class="line">date: 2017<span class="string">-05</span><span class="string">-05</span> 12:30:52</div><div class="line">type: "tags"</div><div class="line">comments: false</div><div class="line"><span class="keyword">tags:</span></div><div class="line"> - Qt</div><div class="line"> - Linux</div><div class="line"> - Hexo</div><div class="line"> - ROS</div></pre></td></tr></table></figure></p>
<p>可以在上面添加自己的标签。<br>分类页的示例如下:<br>　<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="string">title:</span> 分类</div><div class="line"><span class="string">date:</span> <span class="number">2017</span><span class="number">-05</span><span class="number">-05</span> <span class="number">12</span>:<span class="number">30</span>:<span class="number">42</span></div><div class="line"><span class="string">type:</span> <span class="string">"categories"</span></div><div class="line"><span class="string">comments:</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<h1 id="发表文章"><a href="#发表文章" class="headerlink" title="发表文章"></a>发表文章</h1><p>新文章的发表使用以下命令：<br>　　<figure class="highlight cos"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">$hexo</span> <span class="keyword">new</span> post <span class="string">"文章名"</span> 或者 hexo n <span class="string">"文章名"</span></div></pre></td></tr></table></figure></p>
<p>一个文章的开头应包含:<br>　<figure class="highlight subunit"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">title: #文章题目</div><div class="line">date: #日期</div><div class="line"><span class="keyword">tags:</span> #标签</div><div class="line">categories: #分类</div></pre></td></tr></table></figure></p>
<p>文章存储在<em>hexo/source/_posts</em>目录下，后缀为<em>.md</em>。可以在适当位置插入以下符号用于部分显示:<br>　　<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!--more--&gt;</span></div></pre></td></tr></table></figure></p>
<p>插入该符号之前的文字可以直接显示出来，之后的需要鼠标点击<em>阅读全文</em>来显示全部。<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$hexo</span> g <span class="regexp">//</span>生成静态文件</div><div class="line"><span class="variable">$hexo</span> d <span class="regexp">//</span>部署</div></pre></td></tr></table></figure></p>
<h1 id="添加RSS"><a href="#添加RSS" class="headerlink" title="添加RSS"></a>添加RSS</h1><p>安装RSS插件：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$npm</span> install hexo-generator-feed --save</span></div></pre></td></tr></table></figure></p>
<p>修改<em>hexo/_config.yml</em>根目录下的全局配置文件，添加以下内容:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#RSS 订阅支持</span></div><div class="line"><span class="symbol">plugin:</span></div><div class="line">- hexo-generator-feed</div><div class="line"><span class="meta">#feed Atom</span></div><div class="line"><span class="symbol">feed:</span></div><div class="line"><span class="symbol">  type:</span> atom</div><div class="line"><span class="symbol">  path:</span> atom.xml</div><div class="line"><span class="symbol">  limit:</span> <span class="number">20</span></div></pre></td></tr></table></figure></p>
<p>修改主题目录下的配置文件<em>themes/nexT/_config.yml</em><br>　　<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">rss:</span> /atom.xml</div></pre></td></tr></table></figure></p>
<h1 id="添加sitemap"><a href="#添加sitemap" class="headerlink" title="添加sitemap"></a>添加sitemap</h1><p>安装<em>sitemap</em>插件:<br>　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$npm</span> install hexo-generator-sitemap --save</span></div></pre></td></tr></table></figure></p>
<p>修改<em>hexo/_config.yml</em>根目录下的全局配置文件:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">sitemap:</span></div><div class="line"><span class="symbol">　　　path:</span> sitemap.xml</div></pre></td></tr></table></figure></p>
<p>添加baidusitemap：<br>  <figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$npm</span> install hexo-generator-baidu-sitemap --save</span></div></pre></td></tr></table></figure></p>
<p>修改<em>hexo/_config.yml</em>根目录下的全局配置文件:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">baidusitemap:</span></div><div class="line"><span class="symbol">　　　path:</span> baidusitemap.xml</div></pre></td></tr></table></figure></p>
<h1 id="添加侧栏社交链接"><a href="#添加侧栏社交链接" class="headerlink" title="添加侧栏社交链接"></a>添加侧栏社交链接</h1><p>修改主题目录下的配置文件<em>themes/nexT/_config.yml</em><br>　　<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># <span class="selector-tag">Social</span> <span class="selector-tag">Links</span></div><div class="line"># <span class="selector-tag">Key</span> <span class="selector-tag">is</span> <span class="selector-tag">the</span> <span class="selector-tag">link</span> <span class="selector-tag">label</span> <span class="selector-tag">showing</span> <span class="selector-tag">to</span> <span class="selector-tag">end</span> <span class="selector-tag">users</span>.</div><div class="line"># <span class="selector-tag">Value</span> <span class="selector-tag">is</span> <span class="selector-tag">the</span> <span class="selector-tag">target</span> <span class="selector-tag">link</span> (E.g. <span class="attribute">GitHub</span>: <span class="attribute">https</span>:<span class="comment">//github.com/iissnan)</span></div><div class="line"><span class="attribute">social</span>:</div><div class="line">  <span class="attribute">Github</span>: <span class="attribute">https</span>:<span class="comment">//github.com/username</span></div><div class="line">  知乎: <span class="attribute">http</span>:<span class="comment">//www.zhihu.com/people/username</span></div><div class="line">  <span class="attribute">Email</span>: <span class="attribute">mailto</span>: user<span class="variable">@xx</span>.com</div></pre></td></tr></table></figure></p>
<p>设置链接的图标，对应的字段是<em>social_icons</em>在主题配置文件中:<br>　<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Social Icons</span></div><div class="line"><span class="attr">social_icons:</span></div><div class="line"><span class="attr">enable:</span> <span class="literal">true</span></div><div class="line"><span class="comment"># Icon Mappings</span></div><div class="line"><span class="attr">GitHub:</span> <span class="string">github</span></div><div class="line"><span class="attr">Email:</span> <span class="string">envelope</span></div></pre></td></tr></table></figure></p>
<p>nexT使用的图标来自<a href="http://fontawesome.io/" target="_blank" rel="external">FontAwesome</a>，只要上面有的都可以配置到nexT使用。</p>
<h1 id="添加本地搜索"><a href="#添加本地搜索" class="headerlink" title="添加本地搜索"></a>添加本地搜索</h1><p>安装<em>hexo-generator-serarch</em><br>　　<figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$npm <span class="keyword">install</span> hexo-generator-<span class="keyword">search</span> <span class="comment">--save</span></div></pre></td></tr></table></figure></p>
<p>修改<em>hexo/_config.yml</em>根目录下的全局配置文件添加:<br>　　<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">search:</div><div class="line"> path: search.<span class="keyword">xml</span></div><div class="line"> <span class="title">field</span>: post</div></pre></td></tr></table></figure></p>
<h1 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h1><p>在hexo/source/目录下建立images文件夹，将头像放置在该文件夹下，修改主题目录下的配置文件<em>themes/nexT/_config.yml</em><br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">avatar:</span> <span class="meta-keyword">/images/</span>avatar.jpg</div></pre></td></tr></table></figure></p>
<h1 id="生成网站二维码"><a href="#生成网站二维码" class="headerlink" title="生成网站二维码"></a>生成网站二维码</h1><p>二维码生成工具很多，这个<a href="https://www.unitag.io/qrcode" target="_blank" rel="external">Custom QR Code Generator</a>比较不错。生成后将二维码添加到关于页面。</p>
<h1 id="设置代码高亮主题"><a href="#设置代码高亮主题" class="headerlink" title="设置代码高亮主题"></a>设置代码高亮主题</h1><p>NexT 使用<a href="https://github.com/chriskempson/tomorrow-theme" target="_blank" rel="external">TomorrowTheme</a>作为代码高亮，共有5款主题供选择。 打开主题配置文件<em>themes/nexT/_config.yml</em>修改:<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> Code Highlight theme</span></div><div class="line"><span class="meta">#</span><span class="bash"> Available value:</span></div><div class="line"><span class="meta">#</span><span class="bash">    normal | night | night eighties | night blue | night bright</span></div><div class="line"><span class="meta">#</span><span class="bash"> https://github.com/chriskempson/tomorrow-theme</span></div><div class="line">highlight_theme: night bright</div></pre></td></tr></table></figure></p>
<h1 id="开启打赏功能"><a href="#开启打赏功能" class="headerlink" title="开启打赏功能"></a>开启打赏功能</h1><p>只需要主题配置文件中填入微信和支付宝收款二维码图片地址，即可开启该功能。修改主题配置文件<em>themes/nexT/_config.yml</em><br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">reward_comment:</span> 您的支持是我原创的动力</div><div class="line"><span class="symbol"> wechatpay:</span> <span class="meta-keyword">/path/</span>to/wechat-reward-image</div><div class="line"><span class="symbol"> alipay:</span> <span class="meta-keyword">/path/</span>to/alipay-reward-image</div></pre></td></tr></table></figure></p>
<p>鼠标放置在二维码上面时，下面的字来回晃眼，修改如下文件:<br><em>themes/next/source/css/_common/components/post/post-reward.styl</em><br>注释掉以下代码：<img src="/2017/05/09/hexo-advance/pay.jpg" alt="Alt text"></p>
<h1 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a>友情链接</h1><p>修改主题配置文件<em>themes/next/_config.yml</em><br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="meta"># Blog rolls</span></div><div class="line"><span class="symbol">links_title:</span> 友情链接</div><div class="line"><span class="meta">#links_layout: block</span></div><div class="line"><span class="meta">#links_layout: inline</span></div><div class="line"><span class="symbol">links:</span></div><div class="line"><span class="symbol"> hexo:</span> https:<span class="comment">//hexo.io/zh-cn/docs</span></div><div class="line"><span class="symbol"> nexT:</span> http:<span class="comment">//theme-next.iissnan.com/</span></div></pre></td></tr></table></figure></p>
<h1 id="开启动画背景"><a href="#开启动画背景" class="headerlink" title="开启动画背景"></a>开启动画背景</h1><p><a href="http://theme-next.iissnan.com/theme-settings.html" target="_blank" rel="external">nexT</a> 自带两种背景动画效果，canvas_nest以及three_waves,在主题配置文件:<br> <em>themes/next/_config.yml</em>中设置为true即可开启,<br>　　<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Canvas-nest</span></div><div class="line"><span class="attr">canvas_nest:</span> <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<h1 id="开启JiaThis分享"><a href="#开启JiaThis分享" class="headerlink" title="开启JiaThis分享"></a>开启JiaThis分享</h1><p><a href="http://www.jiathis.com/" target="_blank" rel="external">Jiathis</a>为文章提供社会化分享功能。修改主题配置文件<em>themes/next/_config.yml</em>:<br>　　<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Share</span></div><div class="line"><span class="attr">jiathis:</span> <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<h1 id="百度分享"><a href="#百度分享" class="headerlink" title="百度分享"></a>百度分享</h1><p>两种分享只能同时开启一种，百度分享需要在站点配置文件<em>hexo/_config.yml</em>中添加：<br>　　<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># baidu share</span></div><div class="line"><span class="attr">baidushare:</span> <span class="literal">true</span> <span class="comment">#百度分享功能</span></div></pre></td></tr></table></figure></p>
<p>另外需要在主题配置文件<em>themes/next/_config.yml</em>中开启百度分享功能：<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#</span><span class="bash"> Baidu Share</span></div><div class="line"><span class="meta">#</span><span class="bash"> Available value:</span></div><div class="line"><span class="meta">#</span><span class="bash">    button | slide</span></div><div class="line"><span class="meta">#</span><span class="bash"> Warning: Baidu Share does not support https.</span></div><div class="line">baidushare: </div><div class="line"> type: button</div></pre></td></tr></table></figure></p>
<h1 id="添加DISQUS评论"><a href="#添加DISQUS评论" class="headerlink" title="添加DISQUS评论"></a>添加DISQUS评论</h1><p>修改主题配置文件开启<a href="https://disqus.com/" target="_blank" rel="external">DISQUS</a>功能：<br>　　<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Disqus</span></div><div class="line"><span class="attr">disqus:</span></div><div class="line"><span class="attr"> enable:</span> <span class="literal">true</span></div><div class="line"><span class="attr"> shortname:</span></div><div class="line"><span class="attr"> count:</span> <span class="literal">true</span></div></pre></td></tr></table></figure></p>
<p>去<a href="https://disqus.com/" target="_blank" rel="external">DISQUS</a>官网注册，并获取自己的shortname,填写至主题配置文件中的对应字段中。取消一篇文章的评论只需要在文章的头部修改：<br>　　<figure class="highlight yaml"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="attr">comments:</span> <span class="literal">false</span></div></pre></td></tr></table></figure></p>
<h1 id="设置网站图标"><a href="#设置网站图标" class="headerlink" title="设置网站图标"></a>设置网站图标</h1><p>图标制作网站<a href="http://www.faviconer.com/" target="_blank" rel="external">faviconer</a>，制作完成自己的网站图标后放到<em>hexo/source</em>根目录下，并修改主题配置文件：<br>　　<figure class="highlight clean"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># Put your favicon.ico into `hexo-site/source/` directory.</div><div class="line">favicon: /favicon.ico</div></pre></td></tr></table></figure></p>
<h1 id="页面中插入图片"><a href="#页面中插入图片" class="headerlink" title="页面中插入图片"></a>页面中插入图片</h1><p>图片的插入可以使用<a href="http://markdownpad.com/" title="markdown Editor for Windows" target="_blank" rel="external">MarkdownPad</a>的语法：<br>　　<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">图片名称</span>](<span class="link">图片地址</span>)</div></pre></td></tr></table></figure></p>
<p>图片可以放在本地，也可以放在云端。建议放在云端，因为github的空间有限，云端可以使用<a href="https://www.qiniu.com/" target="_blank" rel="external">七牛云存储</a>。<br>本地图片的插入有两种方法，早期的<a href="https://hexo.io/zh-cn/docs/" title="hexo说明" target="_blank" rel="external">hexo</a>需要将图片放在网站根目录下的<em>source/</em>文件夹中比如<em>source/images/</em>文件夹，将图片放到该处，即可在页面中引用：<br>　　<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">test</span>](<span class="link">source/images/test.jgp</span>)</div></pre></td></tr></table></figure></p>
<p><a href="https://hexo.io/zh-cn/docs/" title="hexo说明" target="_blank" rel="external">hexo</a>2.0之后，引入新方法，参考<a href="https://github.com/CodeFalling/hexo-asset-image" target="_blank" rel="external">CodeFalling/hexo-asset-image</a><br>安装插件：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$npm</span> install hexo-asset-image --save</span></div></pre></td></tr></table></figure></p>
<p> 修改配置文件中的 <em>post_asset_folder:</em> 为 <em>true</em> ，这样新建文章时，会在 <em>_post</em> 目录下生成同名的文件夹，页面需要的各种图片都可以放到此处。比如：<br>　　<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">my-Publish</div><div class="line">├── my<span class="selector-class">.jpg</span></div><div class="line">├── logo<span class="selector-class">.jpg</span></div><div class="line">└── test<span class="selector-class">.jpg</span></div><div class="line">my-Publish.md</div></pre></td></tr></table></figure></p>
<p>新建名为 <em>my-Publish</em> 的新文章，文章需要的图片都放到该文件夹中。引用:<br>　　<figure class="highlight markdown"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">![<span class="string">xx</span>](<span class="link">my-Publish/my.jpg</span>)</div></pre></td></tr></table></figure></p>
<p>即可插入图片，<em>xx</em>可以随意。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;添加页面&quot;&gt;&lt;a href=&quot;#添加页面&quot; class=&quot;headerlink&quot; title=&quot;添加页面&quot;&gt;&lt;/a&gt;添加页面&lt;/h1&gt;&lt;p&gt;页面指的是分类页&lt;em&gt;categories&lt;/em&gt;、标签页&lt;em&gt;tags&lt;/em&gt;、关于页&lt;em&gt;about&lt;/em&gt;等。使用以下命令生成以上页面参考&lt;a href=&quot;http://theme-next.iissnan.com/theme-settings.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nexT&lt;/a&gt;:&lt;br&gt;　　&lt;figure class=&quot;highlight cos&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;$hexo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page categories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;$hexo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page tags&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;$hexo&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; page about&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在 &lt;em&gt;hexo&lt;/em&gt; 配置文件 &lt;em&gt;_config.yml&lt;/em&gt; 文件中设置 &lt;em&gt;post_asset_folder&lt;/em&gt; 为true,当新建页面后会自动生成一个同名文件夹，用于存储所需的资源图片等。生成以上页面后在主题配置文件中 &lt;em&gt;themes/nexT/_config.yml&lt;/em&gt; 打开相关配置项:&lt;br&gt;　　&lt;figure class=&quot;highlight dts&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;menu:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  home:&lt;/span&gt; /&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  categories:&lt;/span&gt; /categories&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  about:&lt;/span&gt; /about&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  archives:&lt;/span&gt; /archives&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;symbol&quot;&gt;  tags:&lt;/span&gt; /tags&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;#sitemap: /sitemap.xml&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;meta&quot;&gt;#commonweal: /404.html&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://stevenshi.me/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://stevenshi.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Qt如何在指定位置显示控件</title>
    <link href="http://stevenshi.me/2017/05/09/qt-widget-designated-location/"/>
    <id>http://stevenshi.me/2017/05/09/qt-widget-designated-location/</id>
    <published>2017-05-09T01:20:14.000Z</published>
    <updated>2017-05-14T23:56:22.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>假如窗体背景为一张图片，想要在图片的某一个位置放置一个<em>Qlabel</em>，用于显示一个实时变量，但又不知道这个位置的精确坐标，这个时候该如何实现呢？</p>
<h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>一种方法是借用图片工具，找到指定位置的相对坐标，然后将控件放置在该坐标处;另一种方法可以将图片用网格划分，然后添加一个网格布局，查看指定的位置位于哪一行哪一列，然后将控件放置到布局中。这种方式不能做到精确的定位，但大体上可以使用。考虑到简单实用，选择第二种方法。</p>
<h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><a id="more"></a>
<h2 id="添加资源文件"><a href="#添加资源文件" class="headerlink" title="添加资源文件"></a>添加资源文件</h2><p>首先创建一个<em>QWidget</em>，并设置背景图片。在工程目录下创建一个名为<em>icons</em>的文件夹，将图片放置到这个位置。回到<em>Qt</em>工程目录，右键自己的工程选择添加新文件-&gt;<em>qt</em>资源文件: <img src="/2017/05/09/qt-widget-designated-location/qrc.jpg" alt="Alt text"></p>
<p>假如建立后的资源文件为<em>res.qrc</em>,打开后，选择添加前缀，并添加刚才放置的图片文件，添加后的<em>res.qrc</em>如下:<img src="/2017/05/09/qt-widget-designated-location/res-qrc.jpg" alt="Alt text"></p>
<h2 id="设置背景图片"><a href="#设置背景图片" class="headerlink" title="设置背景图片"></a>设置背景图片</h2><p>在设置背景图片后要保证窗口变化时，背景图片能够随着窗口的变化而变化。因此需要重写窗口的<em>resizeEvent</em>事件。<br>　　<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">void</span> MainWindow::resizeEvent(QResizeEvent *event)</div><div class="line">&#123;</div><div class="line">　QWidget::resizeEvent(event);</div><div class="line">　QImage <span class="built_in">image</span>;</div><div class="line">　<span class="built_in">image</span>.load(<span class="string">":/icons/linux.jpeg"</span>);</div><div class="line">　QPalette palette;</div><div class="line">　palette.setBrush(<span class="keyword">this</span>-&gt;backgroundRole(),QBrush(<span class="built_in">image</span>.scaled(event-&gt;<span class="built_in">size</span>(),Qt::IgnoreAspectRatio,Qt::SmoothTransformation)));</div><div class="line">　<span class="keyword">this</span>-&gt;setPalette(palette);</div><div class="line">　&#125;</div></pre></td></tr></table></figure></p>
<p>显示效果如下：<img src="/2017/05/09/qt-widget-designated-location/linux.jpg" alt="Alt text"></p>
<h2 id="将窗体网格化"><a href="#将窗体网格化" class="headerlink" title="将窗体网格化"></a>将窗体网格化</h2><p>假如我想在X字符下面显示一个<em>Qlabel</em>，现将窗体分成8行9列因为我的显示器是16:9尺寸，并显示所画的网格线，重写窗体的<em>paintEvent</em>事件：<br>　　<figure class="highlight arduino"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"> <span class="keyword">void</span> MainWindow::paintEvent(QPaintEvent *event)</div><div class="line"> &#123;</div><div class="line">　<span class="comment">//画网格线</span></div><div class="line">  QPainter painter(<span class="keyword">this</span>);</div><div class="line">  drawMyGrid(&amp;painter,<span class="number">8</span>,<span class="number">9</span>);</div><div class="line">  painter.setPen(Qt::black);</div><div class="line">　&#125;</div><div class="line"> <span class="keyword">void</span> MainWindow::drawMyGrid(QPainter *painter,<span class="keyword">int</span> row,<span class="keyword">int</span> col)</div><div class="line"> &#123;</div><div class="line">  <span class="keyword">int</span> mgin=<span class="number">1</span>;<span class="comment">//边界</span></div><div class="line">  QRect <span class="built_in">rect</span>;</div><div class="line">  <span class="keyword">int</span> i,j,x,y;</div><div class="line">  <span class="built_in">rect</span>=QRect(mgin,mgin,<span class="built_in">width</span>()-mgin,<span class="built_in">height</span>()-mgin);</div><div class="line"></div><div class="line">  <span class="built_in">for</span>( j=<span class="number">0</span>;j&lt;=row;j++)<span class="comment">//行</span></div><div class="line">  &#123;</div><div class="line">   y=<span class="built_in">rect</span>.bottom()-(j*(<span class="built_in">rect</span>.<span class="built_in">height</span>()-mgin)/row);</div><div class="line">   painter-&gt;drawLine(<span class="built_in">rect</span>.left(),y,<span class="built_in">rect</span>.right(),y);</div><div class="line">  &#125;</div><div class="line">  <span class="built_in">for</span>(i=<span class="number">0</span>;i&lt;=col;i++)<span class="comment">//列</span></div><div class="line">  &#123;</div><div class="line">   x=<span class="built_in">rect</span>.left()+(i*(<span class="built_in">rect</span>.<span class="built_in">width</span>()-mgin)/col);</div><div class="line">   painter-&gt;drawLine(x,<span class="built_in">rect</span>.top(),x,<span class="built_in">rect</span>.bottom());</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>显示效果：<img src="/2017/05/09/qt-widget-designated-location/grid.jpg" alt="Alt text"></p>
<h2 id="在指定位置放置控件"><a href="#在指定位置放置控件" class="headerlink" title="在指定位置放置控件"></a>在指定位置放置控件</h2><p>字符X下方的位置为第六行第七列。首先给窗体安装一个<em>QGridLayout</em>布局，将<em>Qlabel</em>放置到该布局中。<br>　　<figure class="highlight lisp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">　label1  = new QLabel(<span class="name">tr</span>(<span class="string">"Text"</span>))<span class="comment">;</span></div><div class="line">　label1-&gt;setStyleSheet(<span class="string">"color:white;font:bold;font-size:30"</span>)<span class="comment">;</span></div><div class="line">　QGridLayout *mylayout     = new QGridLayout<span class="comment">;</span></div><div class="line">　mylayout-&gt;addWidget(<span class="name">label1</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">1</span>,<span class="number">1</span>)<span class="comment">;//第六行第七列，占用1行1列</span></div><div class="line">　QWidget * widget = new QWidget(<span class="name">this</span>)<span class="comment">;</span></div><div class="line">　widget-&gt;setLayout(<span class="name">mylayout</span>)<span class="comment">;//安装布局</span></div><div class="line">　setCentralWidget(<span class="name">widget</span>)<span class="comment">;</span></div></pre></td></tr></table></figure></p>
<p>通过以下代码设置行列的宽高比例:<br>　　<figure class="highlight lsl"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">mylayout-&gt;setColumnStretch(<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//设置第一列的宽度比例</span></div><div class="line">mylayout-&gt;setRowStretch(<span class="number">0</span>,<span class="number">1</span>);<span class="comment">//设置第一行的高度比例</span></div></pre></td></tr></table></figure></p>
<p>必须指定每一行每一列的高度和宽度比。<br>最后效果:<img src="/2017/05/09/qt-widget-designated-location/final.jpg" alt="Alt text"></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;假如窗体背景为一张图片，想要在图片的某一个位置放置一个&lt;em&gt;Qlabel&lt;/em&gt;，用于显示一个实时变量，但又不知道这个位置的精确坐标，这个时候该如何实现呢？&lt;/p&gt;
&lt;h1 id=&quot;思路&quot;&gt;&lt;a href=&quot;#思路&quot; class=&quot;headerlink&quot; title=&quot;思路&quot;&gt;&lt;/a&gt;思路&lt;/h1&gt;&lt;p&gt;一种方法是借用图片工具，找到指定位置的相对坐标，然后将控件放置在该坐标处;另一种方法可以将图片用网格划分，然后添加一个网格布局，查看指定的位置位于哪一行哪一列，然后将控件放置到布局中。这种方式不能做到精确的定位，但大体上可以使用。考虑到简单实用，选择第二种方法。&lt;/p&gt;
&lt;h1 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class=&quot;headerlink&quot; title=&quot;开始&quot;&gt;&lt;/a&gt;开始&lt;/h1&gt;
    
    </summary>
    
      <category term="Qt" scheme="http://stevenshi.me/categories/Qt/"/>
    
    
      <category term="Qt" scheme="http://stevenshi.me/tags/Qt/"/>
    
  </entry>
  
  <entry>
    <title>hexo 博客备份</title>
    <link href="http://stevenshi.me/2017/05/07/hexo-backup/"/>
    <id>http://stevenshi.me/2017/05/07/hexo-backup/</id>
    <published>2017-05-07T13:25:07.000Z</published>
    <updated>2017-05-14T23:56:22.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>在公司电脑中做好了hexo博客撰写，也将文章推送到了github并且发布了;回到家中在自己的电脑上想给自己的博客添加一篇文章，按照hexo建站流程，又建了一遍，但写完文章后发现，之前在公司写得博客被覆盖了，想哭的感觉有木有。当使用不同的电脑撰写博客时，会涉及到博客资源的备份和更新，如果简单的拷贝会比较麻烦，当然也可以tar整个hexo工作目录;单纯的push到github会有部分文件不全,由于主题文件目录也是git管理方式，当push后，主题默认是不会被推送到github上的。所以，必须稍作修改，才能正确的备份。</p>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>在自己的github仓库中默认有master分支，比如username目录下的：<br>username.github.io仓库。使用master分支保存自己的hexo博客静态文件，新建hexo分支用于保存hexo资源文件。每次撰写完博客后，顺便将自己的hexo工作目录push到远程仓库的hexo分支;当在另外一台电脑上写博客时，先获取远程仓库的分支，之后就可以编辑了<br><a id="more"></a></p>
<h2 id="推送到远程"><a href="#推送到远程" class="headerlink" title="推送到远程"></a>推送到远程</h2><p>进入到自己的博客工作目录比如<em>github\hexo</em>,先查看远程主机<br>　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$git</span> remote -v</span></div></pre></td></tr></table></figure></p>
<p>如果有输出，查看下是否是自己远程仓库的名字，如果不是username.github.io则删除：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$git</span> remote rm origin</span></div></pre></td></tr></table></figure></p>
<p>添加远程主机：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$git</span> remote add origin https:<span class="regexp">//gi</span>thub.com<span class="regexp">/yourusername/y</span>ourusername.github.io.git</div><div class="line"><span class="variable">$git</span> init</div></pre></td></tr></table></figure></p>
<p>删除掉<em>theme\nexT</em>目录下的<em>.git</em>文件夹，因为我们要将主题配置一同推送。如果删除后还是不能推送nexT主题，就将nexT改个名字，但要注意在hexo的_config.yml中对应的主题名字与这个文件夹名字要保持一致。<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">git add --all //add之后可以用*git status*查看刚刚改过的文件状态</span></div><div class="line"><span class="meta">$</span><span class="bash">git commit -m <span class="string">"backup hexo"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">git push origin hexo //将本地文件push到远程仓库的hexo分支，没有则建立该分支</span></div></pre></td></tr></table></figure></p>
<p>在远程仓库查看，username.github.io的仓库下已经有了两个分支，一个叫master,一个叫hexo。但发现有些不想推送的文件也被推送到了远程，比如hexo根目录下的public文件夹，这个文件夹是生成的博客静态文件，它是在博客部署后被推送到：username.github.io的master分支的，我们这里并不需要保存该文件夹。编辑hexo根目录下的.gitignore文件，添加不需要推送的文件或文件夹：<br>　　<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.DS_Store</span></div><div class="line">Thumbs<span class="selector-class">.db</span></div><div class="line">*<span class="selector-class">.log</span></div><div class="line">node_modules/</div><div class="line">public/</div><div class="line">.deploy*/</div></pre></td></tr></table></figure></p>
<p>由于之前推送过，可能.gitignore没有起作用，.gitignore只能忽略那些原来没有被追踪的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。这个时候就需要删除缓存改变未被追踪状态，重新提交：<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">git rm -r --cached .</span></div><div class="line"><span class="meta">$</span><span class="bash">git add --all</span></div><div class="line"><span class="meta">$</span><span class="bash">git commit -m <span class="string">"update .gitignore"</span></span></div></pre></td></tr></table></figure></p>
<p> 之后再次推送即可。</p>
<h2 id="获取远程分支"><a href="#获取远程分支" class="headerlink" title="获取远程分支"></a>获取远程分支</h2><p>前面已经将写好的博客资源文件推送到远程仓库username.github.io的分支hexo,无论在哪里都可以获取远程分支至本地进行博客撰写，并且保持文章的更新状态。假如我在家中的电脑的目录<em>F:\github\home</em>下想撰写一篇新博客文章，首先要做的是进入到该目录下，进行hexo环境的安装，参考我的前一篇博客。<br>　　<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$npm</span> install hexo-<span class="keyword">cli</span> --<span class="keyword">save</span> <span class="comment">//在新电脑上配置hexo</span></div><div class="line"><span class="variable">$npm</span> install hexo --<span class="keyword">save</span></div><div class="line"><span class="variable">$npm</span> install hexo-server --<span class="keyword">save</span></div><div class="line"><span class="variable">$npm</span> install hexo-generator-<span class="keyword">search</span> --<span class="keyword">save</span></div><div class="line"><span class="variable">$npm</span> install hexo-deployer-git --<span class="keyword">save</span></div></pre></td></tr></table></figure></p>
<p>当环境建立好后，运行<em>hexo init</em>命令：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$hexo</span> init</span></div></pre></td></tr></table></figure></p>
<p>然后删除<em>hexo init</em>命令产生的其它文件夹，只保留生成的node_modules文件夹，建立博客需要的hexo各种命令以及依赖项都在这里:<br>　　<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$rm</span> _config<span class="selector-class">.yml</span> db<span class="selector-class">.json</span> package<span class="selector-class">.json</span> </div><div class="line"><span class="variable">$rm</span> -rf scaffolds/ themes/ source/</div><div class="line"><span class="variable">$rm</span> .npmignore</div></pre></td></tr></table></figure></p>
<p>之后添加远程仓库分支至本地：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$git</span> init</div><div class="line"><span class="variable">$git</span> remote add origin https:<span class="regexp">//gi</span>thub.com<span class="regexp">/yourusername/y</span>ourusername.github.io.git</div></pre></td></tr></table></figure></p>
<p> 查看远程仓库所有分支：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$git</span> branch -r</span></div></pre></td></tr></table></figure></p>
<p> 一般输出为：<br>　　<figure class="highlight maxima"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">*<span class="built_in">origin</span>/HEAD -&gt; <span class="built_in">origin</span>/master*</div><div class="line">*<span class="built_in">origin</span>/hexo*</div><div class="line">*<span class="built_in">origin</span>/master*</div></pre></td></tr></table></figure></p>
<p>此时可以看到远程仓库有两个分支，但默认的分支为master,我们需要的是hexo分支，所以需要将默认分支修改为hexo:<br><img src="/2017/05/07/hexo-backup/setbranch.jpg" alt="Alt text"></p>
<p>如果不修改则需要获取分支hexo到本地：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$git</span> fetch origin hexo:hexo</span></div></pre></td></tr></table></figure></p>
<p>或者：<br>　　<figure class="highlight gams"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta"><span class="meta-keyword">$git</span> pull origin hexo</span></div></pre></td></tr></table></figure></p>
<p>切换到hexo分支：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$git</span> checkout hexo <span class="regexp">//</span>此处为hexo分支</div></pre></td></tr></table></figure></p>
<p>此时就可以在该目录下进行博客的撰写工作了，撰写完可以将最新更新提交，并push到远程仓库的hexo分支，至此完成多个电脑同步的问题。<br>当再次回到公司电脑时，进入到博客目录使用<em>git pull</em>即可同步更新。<br>在写新文章之前先配置好git的用户名和邮箱：<br>  <figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">*<span class="variable">$git</span> config --global user<span class="selector-class">.name</span> <span class="string">"yourusername"</span> </div><div class="line">*<span class="variable">$git</span> config --global user<span class="selector-class">.email</span> <span class="string">"yourusername@xxx.com"</span>*</div></pre></td></tr></table></figure></p>
<p> 新电脑需要生成SSH Key，<em>github</em>允许一个用户使用多个SSH Key。如果不想使用那么多个，可以拷贝原来电脑下的SSH Key之后就可以开始新文章的撰写和发布了：<br>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="meta">$</span><span class="bash">git pull //获取更新</span></div><div class="line"><span class="meta">$</span><span class="bash">hexo n post <span class="string">"new blog"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">hexo clean //清除生成的静态文件</span></div><div class="line"><span class="meta">$</span><span class="bash">hexo g //生成静态文件</span></div><div class="line"><span class="meta">$</span><span class="bash">hexo d //部署到远程</span></div><div class="line"><span class="meta">$</span><span class="bash">git add --all //添加所有文件</span></div><div class="line"><span class="meta">$</span><span class="bash">git commit -m <span class="string">"add new blog"</span></span></div><div class="line"><span class="meta">$</span><span class="bash">git push origin hexo //推送到远程分支hexo</span></div></pre></td></tr></table></figure></p>
<p> 如果不小心搞乱了，或者误删了，使用命令恢复到前一个版本:<br>　　<figure class="highlight lasso"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$git <span class="keyword">log</span> <span class="comment">//查看记录</span></div><div class="line">$git reset -<span class="params">-hard</span> HEAD^ <span class="comment">//恢复到前一个记录</span></div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;在公司电脑中做好了hexo博客撰写，也将文章推送到了github并且发布了;回到家中在自己的电脑上想给自己的博客添加一篇文章，按照hexo建站流程，又建了一遍，但写完文章后发现，之前在公司写得博客被覆盖了，想哭的感觉有木有。当使用不同的电脑撰写博客时，会涉及到博客资源的备份和更新，如果简单的拷贝会比较麻烦，当然也可以tar整个hexo工作目录;单纯的push到github会有部分文件不全,由于主题文件目录也是git管理方式，当push后，主题默认是不会被推送到github上的。所以，必须稍作修改，才能正确的备份。&lt;/p&gt;
&lt;h1 id=&quot;解决方案&quot;&gt;&lt;a href=&quot;#解决方案&quot; class=&quot;headerlink&quot; title=&quot;解决方案&quot;&gt;&lt;/a&gt;解决方案&lt;/h1&gt;&lt;p&gt;在自己的github仓库中默认有master分支，比如username目录下的：&lt;br&gt;username.github.io仓库。使用master分支保存自己的hexo博客静态文件，新建hexo分支用于保存hexo资源文件。每次撰写完博客后，顺便将自己的hexo工作目录push到远程仓库的hexo分支;当在另外一台电脑上写博客时，先获取远程仓库的分支，之后就可以编辑了&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://stevenshi.me/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://stevenshi.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>hexo+github建立个人博客</title>
    <link href="http://stevenshi.me/2017/05/07/hexo-blog/"/>
    <id>http://stevenshi.me/2017/05/07/hexo-blog/</id>
    <published>2017-05-07T03:07:34.000Z</published>
    <updated>2017-05-14T23:56:22.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><em>hexo</em>是一个高效简洁的静态博客框架，基于<em>Node.js</em>使用Markdown解析文章，几秒内即可利用靓丽的主题生成静态网页。</p>
<p>#环境：<br><em>windows10 64bits</em></p>
<p>#所需软件：<br>　　1. <a href="https://nodejs.org/en/" title="Java Script运行环境" target="_blank" rel="external">Node.js</a>　基于Chrome V8引擎的JavaScript运行环境；<br>　　2. <a href="https://github.com/git-for-windows/git/releases" title="git for windows" target="_blank" rel="external">Git-for-windows</a>　windows平台下git 运行环境；<br>　　3. <a href="http://markdownpad.com/" title="markdown Editor for Windows" target="_blank" rel="external">MarkdownPad</a>　博客撰写工具</p>
<p><em>开始之前先去 <a href="www.github.com">github</a> 注册一个账户，并新建一个名为username.github.io的仓库，最后生成的仓库地址：<a href="https://github.com/username/username.github.io" target="_blank" rel="external">https://github.com/username/username.github.io</a>  注：username替换为自己的用户名</em></p>
<h1 id="hexo安装与配置"><a href="#hexo安装与配置" class="headerlink" title="hexo安装与配置"></a>hexo安装与配置</h1><p>首先在本地建立自己的博客文件夹，比如 <em>F:\github\hexo</em>，进入该文件夹内，右键点击<em>Git Bash Here</em>,打开<em>git for windows</em>环境，开始安装 <a href="https://hexo.io/zh-cn/docs/" title="hexo说明" target="_blank" rel="external">hexo</a>：<br><a id="more"></a><br>　　<figure class="highlight stata"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">　<span class="variable">$npm</span> install hexo-<span class="keyword">cli</span> -<span class="keyword">g</span> <span class="comment">//注: -g表示全局安装</span></div><div class="line">　<span class="variable">$npm</span> install hexo-server -<span class="keyword">g</span> <span class="comment">//注： hexo3.0之后server模块是独立的,需要单独安装</span></div></pre></td></tr></table></figure></p>
<p>完成之后可以通过命令查看<em>hexo</em>是否安装成功：<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">　$</span><span class="bash">hexo -v</span></div></pre></td></tr></table></figure></p>
<p><em>hexo</em>根目录下的<em>_config.yml</em>文件是全局配置文件，修改该文件实现自己的配置。具体可参考<a href="https://hexo.io/zh-cn/docs/" title="hexo说明" target="_blank" rel="external">hexo</a>官网。</p>
<h2 id="hexo常用命令"><a href="#hexo常用命令" class="headerlink" title="hexo常用命令"></a>hexo常用命令</h2><p>hexo常用命令可以参考hexo的帮助说明，下面列举几个常用命令：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">　<span class="variable">$hexo</span> g <span class="regexp">//</span>等同于hexo generate,用于生成静态文件</div><div class="line">　<span class="variable">$hexo</span> s <span class="regexp">//</span>等同于hexo server,用于启动本地服务器，预览网页</div><div class="line">　<span class="variable">$hexo</span> d <span class="regexp">//</span>等同于hexo deploy,用于部署文件到github</div></pre></td></tr></table></figure></p>
<h2 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h2><p>在自己的博客文件夹下<em>F:\github\hexo</em>,执行命令：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　<span class="variable">$hexo</span> init <span class="regexp">//</span>初始化，自动下载搭建网站所需的所有文件</div><div class="line">　<span class="variable">$npm</span> install <span class="regexp">//</span>安装依赖包</div><div class="line">　<span class="variable">$hexo</span> g <span class="regexp">//</span>产生静态文件</div><div class="line">　<span class="variable">$hexo</span> s <span class="regexp">//</span>启动本地服务器，开启预览功能</div></pre></td></tr></table></figure></p>
<p>这个时候在浏览器输入localhost:4000即可查看到生成的静态网页：<img src="/2017/05/07/hexo-blog/hello-world.jpg" alt="Alt text"></p>
<h2 id="部署到github"><a href="#部署到github" class="headerlink" title="部署到github"></a>部署到github</h2><p>在hexo根目录下找到配置文件_config.yml，使用<a href="http://markdownpad.com/" title="markdown Editor for Windows" target="_blank" rel="external">MarkdownPad</a> 打开，编辑最后的deploy字段，将自己的github仓库地址输入进去：<br>　　<figure class="highlight less"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　<span class="attribute">deploy</span>:</div><div class="line">　　　<span class="attribute">type</span>: git <span class="comment">//注意冒号':'后面的空格一定要有</span></div><div class="line">　　　<span class="attribute">repository</span>: <span class="attribute">https</span>:<span class="comment">//github.com/username/username.github.io.git</span></div><div class="line">　　　<span class="attribute">branch</span>: master</div></pre></td></tr></table></figure></p>
<h3 id="配置SSH-Key"><a href="#配置SSH-Key" class="headerlink" title="配置SSH Key"></a>配置SSH Key</h3><p>在桌面空白处鼠标右键选择<em>Git Bash Here</em>,输入以下命令配置SSH Key:<br>　　<figure class="highlight perl"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ssh-keygen -t rsa -C <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure></p>
<p>引号里面的内容输入邮箱地址，然后回车，会提示文件保存的路径，这时候按回车键确认，然后会提示你输入密码，然后会确认输入一次，在<em>c:/user/username/.ssh/</em>文件夹内看到生成了两个文件，一个是id_rsa，另一个是id_rsa.pub，打开id_rsa.pub然后选中里面的全部内容，复制下来。登录<a href="https://github.com/login" target="_blank" rel="external">github</a>,点击<em>setting</em>,左边有一个<em>SSH and GPG keys</em>选项，进入<em>New SSH</em>选项，<em>title</em>随意，将之前复制的内容粘贴到key里面去。回到<em>Git bash</em>命令行，输入以下命令验证:<br>　　<figure class="highlight autoit"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ssh -T git<span class="symbol">@github</span>.com</div></pre></td></tr></table></figure></p>
<h3 id="配置用户名和密码"><a href="#配置用户名和密码" class="headerlink" title="配置用户名和密码"></a>配置用户名和密码</h3><p>　　<figure class="highlight stylus"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="variable">$git</span> config --global user<span class="selector-class">.name</span> <span class="string">"your username"</span>  </div><div class="line"><span class="variable">$git</span> config --global user<span class="selector-class">.email</span> <span class="string">"your_email@youremail.com"</span></div></pre></td></tr></table></figure></p>
<p>重新生成一下静态文件：<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">　<span class="variable">$hexo</span> clean <span class="regexp">//</span>清除缓存文件db.json和已生成的静态文件public</div><div class="line">　<span class="variable">$hexo</span> g <span class="regexp">//</span>产生静态文件</div><div class="line">　<span class="variable">$hexo</span> d <span class="regexp">//</span>部署到github</div></pre></td></tr></table></figure></p>
<p>在运行<em>hexo d</em>之前需要安装git部署工具<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="meta">　$</span><span class="bash">npm install hexo-deployer-git -g</span></div></pre></td></tr></table></figure></p>
<p>第一次执行<em>hexo d</em>会弹出对话框提示输入github的用户名和密码。此时在浏览器输入：<br><em><a href="https://github.com/username/username.github.io" target="_blank" rel="external">https://github.com/username/username.github.io</a></em>即可看到自己的博客已经搭建成功。<br>注: username替换为自己的用户名.</p>
<h1 id="nexT主题"><a href="#nexT主题" class="headerlink" title="nexT主题"></a>nexT主题</h1><p>hexo安装完成后，默认的主题是landscape，保存在hexo/themes/文件夹下。<a href="http://theme-next.iissnan.com/" target="_blank" rel="external">nexT</a> 主题需要自行下载。在博客文件目录下F:\github\hexo右键单击Git Bash Here，输入命令:<br>　　<figure class="highlight awk"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">　<span class="variable">$git</span> clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/iissnan/</span>hexo-theme-<span class="keyword">next</span>.git themes<span class="regexp">/nexT</span></div></pre></td></tr></table></figure></p>
<p>下载后的nexT主题会保存在themes目录下。修改hexo根目录下的配置文件_config.yml使主题生效:<br>　　<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">　#</span><span class="bash"> Extensions</span></div><div class="line"><span class="meta">　#</span><span class="bash"><span class="comment"># Plugins: https://hexo.io/plugins/</span></span></div><div class="line"><span class="meta">　#</span><span class="bash"><span class="comment"># Themes: https://hexo.io/themes/</span></span></div><div class="line">　theme: nexT</div></pre></td></tr></table></figure></p>
<p>接下来选择nexT的Scheme，打开nexT的配置文件themes/nexT/_config.yml中，修改:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">　<span class="meta"># Schemes</span></div><div class="line">　<span class="meta">#scheme: Muse <span class="comment">//默认Scheme，黑白主调，大量留白</span></span></div><div class="line">　<span class="meta">#scheme: Mist <span class="comment">//紧凑版本，整洁有序</span></span></div><div class="line"><span class="symbol">　scheme:</span> Pisces <span class="comment">//双栏显示，清新</span></div></pre></td></tr></table></figure></p>
<p>更多的设置请参考: <a href="http://theme-next.iissnan.com/getting-started.html" target="_blank" rel="external">nexT</a></p>
<h2 id="设置语言"><a href="#设置语言" class="headerlink" title="设置语言"></a>设置语言</h2><p>打开hexo的配置文件F:\github\hexo_config.yml，修改:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="symbol">　language:</span> zh-Hans <span class="comment">//中文汉字</span></div></pre></td></tr></table></figure></p>
<h1 id="访问量统计"><a href="#访问量统计" class="headerlink" title="访问量统计"></a>访问量统计</h1><h3 id="文章阅读量统计"><a href="#文章阅读量统计" class="headerlink" title="文章阅读量统计"></a>文章阅读量统计</h3><p>使用 <a href="https://leancloud.cn" target="_blank" rel="external">leancloud</a> 实现文章阅读次数统计。注册完成后，点击访问控制台，选择创建新应用:<img src="/2017/05/07/hexo-blog/leancloudc.jpg" alt="Alt-text"></p>
<p>创建名为Counter的class。之后找到该应用的AppID、AppKey，将这两个值写入到nexT的主题配置文件中_config.yml:<br>　　<figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">　<span class="meta"># Show number of visitors to each article.</span></div><div class="line">　<span class="meta"># You can visit https:<span class="comment">//leancloud.cn get AppID and AppKey.</span></span></div><div class="line"><span class="symbol">　leancloud_visitors:</span></div><div class="line"><span class="symbol">  　　enable:</span> true</div><div class="line"><span class="symbol">  　　app_id:</span> <span class="meta">#&lt;app_id&gt; <span class="comment">//复制刚才创建的应用的AppID</span></span></div><div class="line"><span class="symbol">  　　app_key:</span> <span class="meta">#&lt;app_key&gt; <span class="comment">//复制刚才创建的应用的AppKey</span></span></div></pre></td></tr></table></figure></p>
<p>为了安全，将自己的域名加入安全中心-&gt;web安全域名中，防止恶意修改。完成后部署网站，看效果是不是已经有了文章阅读量显示了。</p>
<h3 id="站点访问统计"><a href="#站点访问统计" class="headerlink" title="站点访问统计"></a>站点访问统计</h3><p>使用 <a href="http://ibruce.info/2015/04/04/busuanzi/" target="_blank" rel="external">不蒜子</a> 脚本实现。<br>在themes\nexT\layout_partials目录下找到文件footer.swig，在文件的头部添加:<br>　　<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">　<span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js"</span>&gt;</span><span class="undefined"></span></div><div class="line">　<span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure></p>
<p>　　</p>
<p>　　
　　</p>
<p>　　</p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;&lt;em&gt;hexo&lt;/em&gt;是一个高效简洁的静态博客框架，基于&lt;em&gt;Node.js&lt;/em&gt;使用Markdown解析文章，几秒内即可利用靓丽的主题生成静态网页。&lt;/p&gt;
&lt;p&gt;#环境：&lt;br&gt;&lt;em&gt;windows10 64bits&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;#所需软件：&lt;br&gt;　　1. &lt;a href=&quot;https://nodejs.org/en/&quot; title=&quot;Java Script运行环境&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;　基于Chrome V8引擎的JavaScript运行环境；&lt;br&gt;　　2. &lt;a href=&quot;https://github.com/git-for-windows/git/releases&quot; title=&quot;git for windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Git-for-windows&lt;/a&gt;　windows平台下git 运行环境；&lt;br&gt;　　3. &lt;a href=&quot;http://markdownpad.com/&quot; title=&quot;markdown Editor for Windows&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MarkdownPad&lt;/a&gt;　博客撰写工具&lt;/p&gt;
&lt;p&gt;&lt;em&gt;开始之前先去 &lt;a href=&quot;www.github.com&quot;&gt;github&lt;/a&gt; 注册一个账户，并新建一个名为username.github.io的仓库，最后生成的仓库地址：&lt;a href=&quot;https://github.com/username/username.github.io&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/username/username.github.io&lt;/a&gt;  注：username替换为自己的用户名&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&quot;hexo安装与配置&quot;&gt;&lt;a href=&quot;#hexo安装与配置&quot; class=&quot;headerlink&quot; title=&quot;hexo安装与配置&quot;&gt;&lt;/a&gt;hexo安装与配置&lt;/h1&gt;&lt;p&gt;首先在本地建立自己的博客文件夹，比如 &lt;em&gt;F:\github\hexo&lt;/em&gt;，进入该文件夹内，右键点击&lt;em&gt;Git Bash Here&lt;/em&gt;,打开&lt;em&gt;git for windows&lt;/em&gt;环境，开始安装 &lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; title=&quot;hexo说明&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo&lt;/a&gt;：&lt;br&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="hexo" scheme="http://stevenshi.me/categories/hexo/"/>
    
    
      <category term="hexo" scheme="http://stevenshi.me/tags/hexo/"/>
    
  </entry>
  
</feed>
